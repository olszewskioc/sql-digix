/*
------------------------------------------------------------------

 						EXERCÍCIO 2 (31/01/25)
					       THIAGO OLSZEWSKI

------------------------------------------------------------------
*/

CREATE TABLE IF NOT EXISTS TESTES.USUARIOS (
    ID              INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SENHA           VARCHAR(100) NOT NULL CHECK(LENGTH(SENHA) >= 6),
    NOME            VARCHAR(100) NOT NULL,
    RAMAL           SMALLINT UNIQUE,
    ESPECIALIDADE   VARCHAR(50) DEFAULT 'NENHUMA'
);

CREATE TABLE IF NOT EXISTS TESTES.MAQUINAS (
    ID          INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TIPO        VARCHAR(50) NOT NULL,
    VELOCIDADE  SMALLINT,
    HD          VARCHAR(50),
    REDE        VARCHAR(50),
    RAM         SMALLINT DEFAULT 8
);

CREATE TABLE IF NOT EXISTS TESTES.SOFTWARE (
    ID          INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PRODUTO     VARCHAR(100) NOT NULL,
    HD          VARCHAR(50),
    RAM         SMALLINT DEFAULT 8
);

CREATE TABLE IF NOT EXISTS TESTES.USUARIO_MAQUINA (
    FK_ID_USUARIO  INTEGER NOT NULL,
    FK_ID_MAQUINA  INTEGER NOT NULL,
    CONSTRAINT FK_ID_USUARIO FOREIGN KEY (FK_ID_USUARIO) REFERENCES TESTES.USUARIOS(ID),
    CONSTRAINT FK_ID_MAQUINA FOREIGN KEY (FK_ID_MAQUINA) REFERENCES TESTES.MAQUINAS(ID)
);

CREATE TABLE IF NOT EXISTS TESTES.MAQUINA_SOFTWARE (
    FK_ID_MAQUINA   INTEGER NOT NULL,
    FK_ID_SOFTWARE  INTEGER NOT NULL,
    CONSTRAINT FK_ID_MAQUINA FOREIGN KEY (FK_ID_MAQUINA) REFERENCES TESTES.MAQUINAS(ID),
    CONSTRAINT FK_ID_SOFTWARE FOREIGN KEY (FK_ID_SOFTWARE) REFERENCES TESTES.SOFTWARE(ID)
);



-- POVOATING USUARIOS
INSERT INTO TESTES.USUARIOS VALUES(DEFAULT, 'Admin1234', 'THIAGO OLSZEWSKI', 1228, 'ENGENHARIA');
INSERT INTO TESTES.USUARIOS VALUES(DEFAULT, 'Admin1234', 'THIAGO CARVALHO', 1010, 'FRONTEND');
INSERT INTO TESTES.USUARIOS VALUES(DEFAULT, 'Admin1234', 'THIAGO OLIVEIRA', 9787, 'BACKEND');
INSERT INTO TESTES.USUARIOS VALUES(DEFAULT, 'Admin1234', 'WILDANTHES ALAMAN', 4545, 'BACKEND');
INSERT INTO TESTES.USUARIOS VALUES(DEFAULT, 'Admin1234', 'KAUÃ VIERA', 7645, 'FRONTEND');

-- POVOATING MAQUINAS
INSERT INTO TESTES.MAQUINAS VALUES(DEFAULT, 'DESKTOP', 1000, '1TB', 'ETHERNET', 16);
INSERT INTO TESTES.MAQUINAS VALUES(DEFAULT, 'NOTEBOOK', 2400, '512GB SSD', 'WIFI', 16);
INSERT INTO TESTES.MAQUINAS VALUES(DEFAULT, 'SERVIDOR', 3200, '4TB SSD', 'ETHERNET', 64);
INSERT INTO TESTES.MAQUINAS VALUES(DEFAULT, 'RASPBERRY PI', 1500, '32GB', 'WIFI', 4);
INSERT INTO TESTES.MAQUINAS VALUES(DEFAULT, 'TABLET', 2200, '128GB', 'WIFI', 8);
INSERT INTO TESTES.MAQUINAS VALUES(DEFAULT, 'DESKTOP', 2000, '2TB', 'ETHERNET', 64);

-- POVOATING SOFTWARE
INSERT INTO TESTES.SOFTWARE VALUES(DEFAULT, 'WINDOWS 11', '50GB', 8);
INSERT INTO TESTES.SOFTWARE VALUES(DEFAULT, 'UBUNTU 22.04', '30GB', 4);
INSERT INTO TESTES.SOFTWARE VALUES(DEFAULT, 'DOCKER', '10GB', 2);
INSERT INTO TESTES.SOFTWARE VALUES(DEFAULT, 'POSTGRESQL', '5GB', 4);
INSERT INTO TESTES.SOFTWARE VALUES(DEFAULT, 'VISUAL STUDIO CODE', '2GB', 2);
INSERT INTO TESTES.SOFTWARE VALUES(DEFAULT, 'ANDROID STUDIO', '50GB', 16);

-- POVOATING USUARIO_MAQUINA (Associa usuários às máquinas)
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(1, 1);  -- Thiago Olszewski -> DESKTOP
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(2, 2);  -- Thiago Carvalho -> NOTEBOOK
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(3, 3);  -- Thiago Oliveira -> SERVIDOR
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(4, 4);  -- Wildanthes Alaman -> RASPBERRY PI
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(5, 5);  -- Kauã Viera -> TABLET
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(1, 3);  -- Thiago Olszewski também tem um SERVIDOR
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(2, 5);  -- Thiago Carvalho também usa um TABLET
INSERT INTO TESTES.USUARIO_MAQUINA VALUES(4, 6);  -- Wildanthes Alaman também usa um DESKTOP

-- POVOATING MAQUINA_SOFTWARE (Associa máquinas aos softwares instalados)
INSERT INTO TESTES.MAQUINA_SOFTWARE VALUES(1, 1);  -- DESKTOP -> WINDOWS 11
INSERT INTO TESTES.MAQUINA_SOFTWARE VALUES(2, 2);  -- NOTEBOOK -> UBUNTU 22.04
INSERT INTO TESTES.MAQUINA_SOFTWARE VALUES(3, 3);  -- SERVIDOR -> DOCKER
INSERT INTO TESTES.MAQUINA_SOFTWARE VALUES(3, 4);  -- SERVIDOR -> POSTGRESQL
INSERT INTO TESTES.MAQUINA_SOFTWARE VALUES(4, 2);  -- RASPBERRY PI -> UBUNTU 22.04
INSERT INTO TESTES.MAQUINA_SOFTWARE VALUES(5, 5);  -- TABLET -> VISUAL STUDIO CODE


SELECT * FROM TESTES.USUARIOS;
SELECT * FROM TESTES.MAQUINAS;
SELECT * FROM TESTES.SOFTWARE;
SELECT * FROM TESTES.USUARIO_MAQUINA;
SELECT * FROM TESTES.MAQUINA_SOFTWARE;

-- TODOS OS ATRIBUTOS DA TABELA USUARIOS PARA ESPECIALIDADE ESPECÍFICA
SELECT * FROM TESTES.USUARIOS WHERE ESPECIALIDADE = 'ENGENHARIA';
SELECT * FROM TESTES.USUARIOS WHERE ESPECIALIDADE = 'FRONTEND';
SELECT * FROM TESTES.USUARIOS WHERE ESPECIALIDADE = 'BACKEND';

-- TODAS AS COMBINAÇÕES DE TIPO E VELOCIDADE DAS MÁQUINAS
SELECT M.TIPO, M.VELOCIDADE FROM TESTES.MAQUINAS M;

-- O TIPO E A VELOCIDADE DOS COMPUTADORES POR TIPO
SELECT M.TIPO, M.VELOCIDADE FROM TESTES.MAQUINAS M WHERE M.TIPO = 'DESKTOP';
SELECT M.TIPO, M.VELOCIDADE FROM TESTES.MAQUINAS M WHERE M.TIPO = 'TABLET';
SELECT M.TIPO, M.VELOCIDADE FROM TESTES.MAQUINAS M WHERE M.TIPO = 'NOTEBOOK';
SELECT M.TIPO, M.VELOCIDADE FROM TESTES.MAQUINAS M WHERE M.TIPO = 'SERVIDOR';

-- ID, TIPO E REDE PARA MÁQUINAS COM RAM < 16
SELECT M.ID, M.TIPO, M.REDE FROM TESTES.MAQUINAS M WHERE M.RAM < 16;

-- O NOME DOS USUÁRIOS QUE UTILIZAM O COMPUTADOR TIPO DESKTOP
SELECT U.NOME 
FROM TESTES.USUARIOS U
JOIN TESTES.USUARIO_MAQUINA UM ON UM.FK_ID_USUARIO = U.ID
JOIN TESTES.MAQUINAS M ON UM.FK_ID_MAQUINA = M.ID
WHERE M.TIPO = 'DESKTOP';

-- ID DAS MÁQUINAS COM DOCKER INSTALADO
SELECT M.ID FROM TESTES.MAQUINAS M
JOIN TESTES.MAQUINA_SOFTWARE MS ON MS.FK_ID_MAQUINA = M.ID
JOIN TESTES.SOFTWARE S ON MS.FK_ID_SOFTWARE = S.ID
WHERE S.PRODUTO = 'DOCKER';

-- ID, RAM, PRODUTO E RAM DOS PRODUTOS QUE NÃO PODEM RODAR DEVIDO A QUANTIDADE DE RAM DA MÁQUINA
SELECT M.ID, M.RAM, S.PRODUTO, S.RAM
FROM TESTES.MAQUINAS M, TESTES.SOFTWARE S
WHERE M.RAM < S.RAM;

-- NOME DOS USUARIOS E A VELOCIDADE DAS SUAS MÁQUINAS
SELECT U.NOME, M.VELOCIDADE FROM TESTES.USUARIOS U
LEFT JOIN TESTES.USUARIO_MAQUINA UM ON UM.FK_ID_USUARIO = U.ID
LEFT JOIN TESTES.MAQUINAS M ON UM.FK_ID_MAQUINA = M.ID;

-- NOME E ID DOS USUÁRIOS QUE TENHAM ID MENOR QUE O DO WILDANTHES ALAMAN OLHANDO O NOME DELE
SELECT U.NOME, U.ID FROM TESTES.USUARIOS U 
WHERE U.ID < (SELECT U.ID FROM TESTES.USUARIOS U WHERE U.NOME = 'WILDANTHES ALAMAN');

-- NÚMERO DE MÁQUINAS COM VELOCIDADE MAIOR QUE 2400
SELECT COUNT(M.ID) FROM TESTES.MAQUINAS M WHERE M.VELOCIDADE > 2400;

-- NÚMERO DE USUÁRIOS DE CADA MÁQUINA
SELECT UM.FK_ID_MAQUINA, COUNT(UM.FK_ID_USUARIO) USUARIOS  FROM TESTES.USUARIO_MAQUINA UM, TESTES.USUARIOS U
WHERE U.ID = UM.FK_ID_USUARIO
GROUP BY UM.FK_ID_MAQUINA
ORDER BY UM.FK_ID_MAQUINA ASC;

-- NÚMERO DE USUÁRIOS AGRUPADOS PELO TIPO DE MÁQUINAS
SELECT M.TIPO, COUNT(U.ID) USUARIOS FROM TESTES.USUARIOS U, TESTES.USUARIO_MAQUINA UM, TESTES.MAQUINAS M
WHERE U.ID = UM.FK_ID_USUARIO AND UM.FK_ID_MAQUINA = M.ID
GROUP BY M.TIPO
ORDER BY M.TIPO ASC;


-- O NÚMERO DE USUÁRIOS DE MÁQUINAS DO TIPO SERVIDOR
SELECT COUNT(U.ID) USER_SERVIDOR FROM TESTES.USUARIOS U, TESTES.USUARIO_MAQUINA UM, TESTES.MAQUINAS M
WHERE U.ID = UM.FK_ID_USUARIO AND UM.FK_ID_MAQUINA = M.ID
AND M.TIPO = 'SERVIDOR';

-- QUANTIDADE DE RAM PARA RODAR O DOCKER E O UBUNTU NA MESMA MÁQUINA
SELECT SUM(S.RAM) RAM_NECESSARIA FROM TESTES.SOFTWARE S
WHERE S.PRODUTO IN ('DOCKER', 'POSTGRESQL');

-- QUANTIDADE DE RAM UTILIZADA EM CADA MÁQUINA PARA OS PRODUTOS INSTALADOS EM CADA UMA DELAS
SELECT M.ID, M.RAM, SUM(S2.RAM) RAM_UTILIZADA FROM TESTES.MAQUINAS M
LEFT JOIN TESTES.MAQUINA_SOFTWARE MS ON MS.FK_ID_MAQUINA = M.ID
LEFT JOIN TESTES.SOFTWARE S2 ON S2.ID = MS.FK_ID_SOFTWARE
WHERE M.ID = MS.FK_ID_MAQUINA
GROUP BY M.ID, M.RAM
ORDER BY M.ID ASC;

-- QUANTIDADE MÉDIA DE RAM POR PRODUTO BASEADA EM TODOS OS PRODUTOS
SELECT ROUND(AVG(S.RAM), 1) RAM_MEDIO FROM TESTES.SOFTWARE S;

-- NÚMERO TOTAL DE MÁQUINAS DE CADA TIPO
SELECT M.TIPO, COUNT(M.ID) MAQUINAS FROM TESTES.MAQUINAS M
GROUP BY M.TIPO
ORDER BY M.TIPO ASC;

-- NÚMERO DE PRODUTOS CUJA RAM É ENTRE 4 E 16
SELECT COUNT(S.ID) PRODUTOS_RAM_4_16 FROM TESTES.SOFTWARE S
WHERE S.RAM BETWEEN 4 AND 16;

-- ID DO PRODUTO CUJO NOME TENHA A LETRA O
SELECT S.ID, S.PRODUTO FROM TESTES.SOFTWARE S
WHERE S.PRODUTO LIKE '%O%'
ORDER BY S.ID ASC;

-- PRODUTO E CAPACIDADE DE RAM PARA AS MÁQUINAS COM CAPACIDADE DE INSTALAÇÃO DE QUALQUER PRODUTO INDIVIDUALMENTE
SELECT M.ID, M.RAM AS RAM_MAQ, S.PRODUTO, S.RAM AS RAM_PROD FROM TESTES.MAQUINAS M
LEFT JOIN TESTES.SOFTWARE S ON M.RAM >= S.RAM
ORDER BY M.ID ASC, S.RAM ASC;

-- RELAÇÃO DOS PRODUTOS QUE ESTÃO INSTALADOS AO MENOS EM UMA MÁQUINA
SELECT DISTINCT S.PRODUTO
FROM TESTES.SOFTWARE S
RIGHT JOIN TESTES.MAQUINA_SOFTWARE MS ON MS.FK_ID_SOFTWARE = S.ID
ORDER BY S.PRODUTO ASC;
