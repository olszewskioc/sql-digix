-- Active: 1739211085766@@127.0.0.1@5432@digix
/*
------------------------------------------------------------------

 						    AULA 6 (10/02/25)
                               TEMA: VIEWS
						    THIAGO OLSZEWSKI

------------------------------------------------------------------

SERÁ USADA O MESMO SCHEMA E DADOS DA LISTA1
*/

-- SALVAR UMA CONSULTA COMO UMA VIEW

CREATE OR REPLACE VIEW LISTA1.ALUNO_TURMA AS   -- CREATE OR REPLACE A VIEW
    SELECT A.NOME_ALUNO, COUNT(DISTINCT T.ID_TURMA) AS TURMAS_MATRICULADAS
    FROM LISTA1.ALUNO A
    JOIN LISTA1.CHAMADA C ON C.ALUNO_COD_MATRICULA = A.COD_MATRICULA
    JOIN LISTA1.TURMA T ON C.TURMA_ID = T.ID_TURMA
    GROUP BY A.NOME_ALUNO, A.COD_MATRICULA
    HAVING COUNT(DISTINCT T.ID_TURMA) > 1;

-- USING A VIEW
SELECT * FROM LISTA1.ALUNO_TURMA;

-- DELETE A VIEW
DROP VIEW ALUNO_TURMA;  -- DELETE FROM PUBLIC

-- 9. ENCONTRAR AS TURMAS QUE POSSUEM A MAIOR QUANTIDADE DE ALUNOS
CREATE OR REPLACE VIEW LISTA1.TOP_TURMAS_ALUNOS AS
    SELECT T.NOME_TURMA, COUNT(A.COD_MATRICULA) AS QTD_ALUNOS
    FROM LISTA1.TURMA T
    LEFT JOIN LISTA1.CHAMADA C ON C.TURMA_ID = T.ID_TURMA
    LEFT JOIN LISTA1.ALUNO A ON C.ALUNO_COD_MATRICULA = A.COD_MATRICULA
    GROUP BY T.NOME_TURMA
    ORDER BY QTD_ALUNOS DESC
    LIMIT 3;

SELECT * FROM LISTA1.TOP_TURMAS_ALUNOS;

-- MATERIALIZED VIEW (ONLY IN POSTGRESQL)
-- MATERIALIZED VIEW IS A VIEW THAT IS PHYSICALLY STORED IN DISK
-- IT IS USEFUL WHEN WE NEED TO PERFORM ANALYTICAL TASKS
CREATE MATERIALIZED VIEW LISTA1.MEDIA_IDADE_TURMA AS
    SELECT T.NOME_TURMA, 
    ROUND(AVG(EXTRACT(YEAR FROM AGE(A.DATA_NASC))), 0) AS MEDIA_IDADE
    FROM LISTA1.TURMA T
    LEFT JOIN LISTA1.ALUNO A ON A.TURMA_ID = T.ID_TURMA
    GROUP BY T.NOME_TURMA
    ORDER BY AVG(EXTRACT(YEAR FROM AGE(A.DATA_NASC))) DESC;

REFRESH MATERIALIZED VIEW LISTA1.MEDIA_IDADE_TURMA;     -- REFRESH TO UPDATE THE VALUES IN THE VIEW



