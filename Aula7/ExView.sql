/*
------------------------------------------------------------------

 						    EXERCÍCIO (12/02/25)
                                TEMA: VIEWS
						       THIAGO OLSZEWSKI

------------------------------------------------------------------
*/

CREATE SCHEMA EX_VIEWS;

CREATE TABLE EX_VIEWS.TIME (
ID INTEGER PRIMARY KEY,
NOME VARCHAR(50)
);
CREATE TABLE EX_VIEWS.PARTIDA (
ID INTEGER PRIMARY KEY,
TIME_1 INTEGER,
TIME_2 INTEGER,
TIME_1_GOLS INTEGER,
TIME_2_GOLS INTEGER,
FOREIGN KEY(TIME_1) REFERENCES EX_VIEWS.TIME(ID),
FOREIGN KEY(TIME_2) REFERENCES EX_VIEWS.TIME(ID)
);
INSERT INTO EX_VIEWS.TIME(ID, NOME) VALUES
(1,'CORINTHIANS'),
(2,'SÃO PAULO'),
(3,'CRUZEIRO'),
(4,'ATLETICO MINEIRO'),
(5,'PALMEIRAS');
INSERT INTO EX_VIEWS.PARTIDA(ID, TIME_1, TIME_2, TIME_1_GOLS, TIME_2_GOLS)
VALUES
(1,4,1,0,4),
(2,3,2,0,1),
(3,1,3,3,0),
(4,3,4,0,1),
(5,1,2,0,0),
(6,2,4,2,2),
(7,1,5,1,2),
(8,5,2,1,2);

-- 2.1 - CRIE UMA VIEW QUE RETORNE A TABELA DE PARTIDA ADICIONANDO AS COLUNAS
-- NOME_TIME_1 E NOME_TIME_2 COM O NOME DOS TIMES
CREATE OR REPLACE VIEW EX_VIEWS.VPARTIDA AS
    SELECT P.*, T1.NOME AS NOME_TIME_1, T2.NOME AS NOME_TIME_2
    FROM EX_VIEWS.PARTIDA P
    JOIN EX_VIEWS.TIME T1 ON P.TIME_1 = T1.ID
    JOIN EX_VIEWS.TIME T2 ON P.TIME_2 = T2.ID
    ORDER BY P.ID ASC;

SELECT * FROM EX_VIEWS.VPARTIDA;

-- 2.2 - REALIZE UMA CONSULTA EM VPARTIDA QUE RETORNE SOMENTE
-- OS JOGOS DOS TIMES QUE POSSUEM NOME QUE COMEÇAM COM A OU C
SELECT NOME_TIME_1, NOME_TIME_2, TIME_1_GOLS, TIME_2_GOLS
FROM EX_VIEWS.VPARTIDA
WHERE NOME_TIME_1 LIKE 'A%' OR NOME_TIME_2 LIKE 'A%'
UNION
SELECT NOME_TIME_1, NOME_TIME_2, TIME_1_GOLS, TIME_2_GOLS
FROM EX_VIEWS.VPARTIDA
WHERE NOME_TIME_1 LIKE 'C%' OR NOME_TIME_2 LIKE 'C%'
ORDER BY NOME_TIME_1, NOME_TIME_2 ASC;

-- 2.3 - CRIE UMA VIEW, UTILIZANDO A VIEW VPARIDA QUE RETORNE
-- UMA COLUNA DE CLASSIFICAÇÃO COM O NOME DO GANHADOR DA PARTIDA
-- OU EMPATE EM CASO DE EMPATE
CREATE OR REPLACE VIEW EX_VIEWS.CLASSIFICACAO AS
    SELECT P.ID AS ID_PARTIDA, P.NOME_TIME_1, P.NOME_TIME_2,
    CASE
        WHEN P.TIME_1_GOLS > P.TIME_2_GOLS THEN P.NOME_TIME_1
        WHEN P.TIME_1_GOLS < P.TIME_2_GOLS THEN P.NOME_TIME_2
        ELSE 'EMPATE'
    END AS CLASSIFICACAO_VENCEDOR
    FROM EX_VIEWS.VPARTIDA P
    ORDER BY CLASSIFICACAO_VENCEDOR;

SELECT * FROM EX_VIEWS.CLASSIFICACAO;

-- 2.4 - CRIE UMA VIEW VTIME QUE RETORNE A TABELA DE TIME ADICIONANDO AS COLUNAS
-- PARTIDAS, VITORIAS, DERROTAS, EMPATES E PONTOS
CREATE OR REPLACE VIEW EX_VIEWS.VTIME AS
    WITH METRICAS AS (
    SELECT T.*, 
    COUNT(DISTINCT P.ID) AS PARTIDAS, 
    COUNT(
        DISTINCT CASE WHEN 
        C.CLASSIFICACAO_VENCEDOR = T.NOME 
        THEN C.ID_PARTIDA ELSE NULL END) AS VITORIAS,
    COUNT(
        DISTINCT CASE WHEN 
        C.CLASSIFICACAO_VENCEDOR = 'EMPATE' 
        THEN C.ID_PARTIDA ELSE NULL END) AS EMPATES,
    COUNT(
        DISTINCT CASE WHEN 
        C.CLASSIFICACAO_VENCEDOR <> T.NOME 
        AND C.CLASSIFICACAO_VENCEDOR <> 'EMPATE' 
        THEN C.ID_PARTIDA ELSE NULL END) AS DERROTAS
    FROM EX_VIEWS.TIME T
    LEFT JOIN EX_VIEWS.VPARTIDA P ON P.TIME_1 = T.ID OR P.TIME_2 = T.ID
    LEFT JOIN EX_VIEWS.CLASSIFICACAO C ON C.NOME_TIME_1 = T.NOME OR C.NOME_TIME_2 = T.NOME
    GROUP BY T.ID, T.NOME
    )
    SELECT 
        ID,
        NOME,
        PARTIDAS,
        VITORIAS,
        EMPATES,
        DERROTAS,
        (VITORIAS * 3) + (EMPATES) AS PONTOS
    FROM METRICAS
    ORDER BY PONTOS DESC;

-- PROFESSOR FEZ COM SUBQUERYS
-- SELECT T.*,
-- (SELECT COUNT(TIME_1) FROM EX_VIEWS.PARTIDA WHERE TIME_1 = T.ID) + 
-- (SELECT COUNT(TIME_2) FROM EX_VIEWS.PARTIDA WHERE TIME_2 = T.ID) AS PARTIDAS,
-- (SELECT SUM(CASE WHEN TIME_1_GOLS > TIME_2_GOLS THEN 1 ELSE 0 END) FROM EX_VIEWS.PARTIDA WHERE TIME_1 = T.ID) +
-- (SELECT SUM(CASE WHEN TIME_1_GOLS < TIME_2_GOLS THEN 1 ELSE 0 END) FROM EX_VIEWS.PARTIDA WHERE TIME_2 = T.ID) AS VITORIAS,
-- (SELECT SUM(CASE WHEN TIME_1_GOLS = TIME_2_GOLS THEN 1 ELSE 0 END) FROM EX_VIEWS.PARTIDA WHERE TIME_2 = T.ID) +
-- (SELECT SUM(CASE WHEN TIME_1_GOLS = TIME_2_GOLS THEN 1 ELSE 0 END) FROM EX_VIEWS.PARTIDA WHERE TIME_1 = T.ID) AS EMPATES,
-- (SELECT SUM(CASE WHEN TIME_1_GOLS > TIME_2_GOLS THEN 1 ELSE 0 END) FROM EX_VIEWS.PARTIDA WHERE TIME_2 = T.ID) +
-- (SELECT SUM(CASE WHEN TIME_1_GOLS < TIME_2_GOLS THEN 1 ELSE 0 END) FROM EX_VIEWS.PARTIDA WHERE TIME_1 = T.ID) AS DERROTAS
-- FROM EX_VIEWS.TIME T;

SELECT * FROM EX_VIEWS.VTIME;

-- 2.5 - REALIZE UMA CONSULTA NA VIEW CLASSIFICACAO
-- SELECT * FROM EX_VIEWS.CLASSFICACAO;

-- 2.6 - APAGUE A VIEW VPARTIDA
-- DROP VIEW EX_VIEWS.VPARTIDA;